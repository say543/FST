

https://msasg.visualstudio.com/DefaultCollection/Cortana/_git/CoreScience/pullrequest/923270?_a=files
跟CMF 建出來的完全不一樣  只能從這邊看diff

好像有revert change
https://msasg.visualstudio.com/DefaultCollection/Cortana/_git/CoreScience/pullrequest/926797?_a=files



featurlizer 的說明
http://qasvalidation.azurewebsites.net/mlgprocessors


intent order 參考這邊
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.intents.pattern.entities.config

slots 的order 參考這邊
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.pattern.entities.config



yue

     不同的featurlizer 寫到output 的話  先寫道的  先贏
     <confirmed by Yue>

根據
output=ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_domain_pattern
是再加上luna 自己 converted oattern  domain_pattern 的output


===============================================================
[qd_mediacontrol_mv8_2_domain_pattern_luna_convert_mediacontrol_featurizer]
===============================================================

根據
output=ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_domain_pattern
是再加上luna 自己 converted pattern  domain_pattern 的output
p.s  qd_mediacontrol_mv8_2_domain_pattern_featurizer 這個是原始的model 的pattern 基本上把luna 的pattern 跟原本的pattern 分開



對應到這個pipeline files
ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_luna_convert_domain.pattern.pipeline
這個是yue 完全自己手寫的


# Further preprocess to remove uncessary tokens
# Lower case
for preprocess_output1

SingleTokenView
ignore
 {*.*}, {!}, {:)}.
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrcrewrite%2Fmlg3.4%2FDUDocumentViewSingleToken.h&version=GBmaster

NLPFSTApplier
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUNLPFSTApplier.h&version=GBmaster
這個apply yue 的 .fst
來源是luna 的convert.preprocess.fst


ExtractNthFeature
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUExtractNthFeature.h&version=GBmaster
這邊用-1 不知道extra last one of preprocess 是什麼意思 是不是固定跟 NLPFSTApplier 搭配

CharTokenizer

https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUDocumentViewCharTokenized.h&version=GBmaster
// Input1 (string feature) = "call mary\tjane"
// Output1 (string features) = "call" "mary" "jane"
// Output2 (string features) = "", " ", "", ""

會輸出兩個feature 的output
一個是原本的string token  一個是seperator

TextEditor
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUDocumentViewTextEditor.h&version=GBmaster
轉成lower case
要提供一個single file 當作input

最後輸出
luna_convert_preprocessed_output_lower_case

# Add BOS to query
# Combine BOS to query
? 這個先不管
ConstFeatureGenerator
StringFeatureUnion
SingleTokenView

# Apply FST

NLPFSTApplier
這邊用的是
ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_luna_convert_domain.pattern.fst 的intent pattern
對家了bos 的query apply
生成DomainMatchedName,DomainMatchedType,DomainMatchedStartChar,DomainMatchedLength
? 為什麼可以生成4個  有點不太還是就先當作接受

FstTags2CrfTags
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUFstTags2CrfTags.h&version=GBmaster
// Inputs:
// 1.   Original Query
// 2.   FST output tags
//
// Output:
// 1.   CRF like tags

用到這個intent 的  mapping
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.domain.pattern.entities.config.xml

FeatureNormalizer
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUFeatureNormalizer.h&version=GBmaster

mapping 成CRF tags 之後  換成
進行normalization
-ddf
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.domain.pattern.map.txt
只有 negative 跟postiive  mediacontrol 的部分  沒有什麼調
不知道這個pair 怎麼決定的
p.s  yue 說他的domain / intent 是固定的format 只有slot 有調


感覺是輸出每個的score
p.s 但是可以調weight

FeatureValueAggregator
       https://qasvalidation.azurewebsites.net/mlgdocs/class_d_u_feature_value_aggregator.html
　　用id  當key 對前面產生的score 進行action
　　?取max 的動作不是太懂
       ? 感覺只是把　　featureid[featureindex1, featureindex2]
       變成  featureid [-1,-1]
       因為input 只有一個
  




===============================================================
[qd_mediacontrol_mv8_2_intents_pattern_luna_convert_mediacontrol_featurizer]
=============================================================== 

對應這個pipeline file
ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_luna_convert_intents.pattern.pipeline


# Further preprocess to remove uncessary tokens
# Lower case
    這兩步都跟  luna_domain_convert 依樣

# Replace Slot Tag To Magic String, for intent matching
for  slots_lccrf_tags
FeatureSimpleFilter
只輸出某一些tag Id   --keeptags= 15
這邊apply 多次 --keeptags= 15   , --keeptags= 14,  --keeptags=26

會不會是xml  slot tagger 的15呢?
對  就是要留下mediaTile  mediaSource  , mediaControlTime
然後map 成magical tag　之後才要處理

TokenReplacer
一次可以取代多個
然後 取代   luna_convert_preprocessed_output_lower_case 裡面的device type 變成
MagicDeviceType
用canonical Token 來取代
--canonicalToken= MagicMediacontrolTitle,MagicMediacontrolMediaSource,MagicMediacontrolTime

 生成LowerCasedQueryAfterSlotReplace 給後面使用
     

# Add BOS to query
# Combine BOS to query
    這兩步都跟  luna_domain_convert 依樣 
    但是用 LowerCasedQueryAfterSlotReplace 當作input

#apply fst
    跟  luna_domain_convert 依樣 

      
     
　NLPFSTApplier
　fst pattern
　ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_　　　　luna_convert_intents.pattern.fst

　FstTags2CrfTags
      luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.intents.pattern.entities.config.xml
      這邊有用到所有的intent
　  ? 在mlg tool 中　似乎FstTags2CrfTags 不需要也可以tag 對不知道功用是什麼
      可以看一下yue 給我的place.txt 比較看看

　 FeatureNormalizer
　ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_　　
luna_convert_intents.pattern.map.txt
　? 這個intent pattern 內容不太懂
　37 intents 是沒有錯   但是會什麼每個pair 都要有
　是不是像是pair wise 的概念
　是不是classfier 的概念  自己對自己是1 其他的都是-1000
　
　FeatureValueAggregator
       https://qasvalidation.azurewebsites.net/mlgdocs/class_d_u_feature_value_aggregator.html
　　用id  當key 對前面產生的score 進行action
　　?取max 的動作不是太懂
       ? 感覺只是把　　featureid[featureindex1, featureindex2]
       變成  featureid [-1,-1]
       因為
       externalInput 3 沒define 但是 基本上根本沒有被使用
  
       Example : FeatureValueAggregator –in=input_1,input_2 –out=output –algo=max –aggregatePerFeatureId input1 : 1[1,1]=1 , 2[2,2]=3 input2 : 1[1,2]=0 , 2[3,4]=4 Then output : 1[-1,-1]=1 , 2[-1,-1]=4




==================================
qd_mediacontrol_mv8_2_slots_pattern_luna_convert_mediacontrol_featurizer
==================================
對應這個pipeline file
ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_luna_convert_slots.pattern.pipeline.txt


# Further preprocess to remove uncessary tokens
# Lower case
    這兩步都跟  luna_domain_convert 依樣

# Add BOS to query
# Combine BOS to query
    這兩步都跟  luna_domain_convert 依樣

# Apply FST
    NLPFSTApplier
       用*.fst apply patterns

    輸出4種
　MatchedNameLuna,MatchedTypeLuna,MatchedStartCharLuna,MatchedLengthLuna
   ? 不知道功用是什麼

　FstTags2CrfTags
　　? 感覺這邊的input 因該要是bondary_query而不是singletoken_query
       bondary_query 是沒有加bos 的結果
       singletoken_query 是有家bos 的結果
　　感覺是因為用 singletoken_query 所以要用 FeatureShifter shift 回去

　FeatureShifter
　https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUFeatureShifter.h&version=GBmaster
　這邊-1 因該是在shift left
   感覺是把BOS拿掉


　FeatureNormalizer1
      對original  slot lccrf 的 結果 (ExternalInput2) 做處理
　ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_luna_convert_slots.original.MV1.buckets.txt
　39 slots 是沒有錯   
　　 主要是改bucket weight
     personal_device_name  (19) 的weight 0.99 比其他的大
　?　（50） 的weight 99 也比其他的大　　但是不知道這個是哪個slot
　　　(39 to 49） 的weigh 是0

       寫到
　　　slots_tags_original_normalize
　FeatureNormalizer2

      對feature shifter 的結果做處理 (luna pattern match 的結果)
　 　跟 FeatureNormalizer1　用依樣的權重file
      寫到
　　slots_tags_luna_convert_normalize
     
　TagReducer
　　對
　　　ExternalInput1 (preprocessed query ) (input stream)
           slots_tags_original_normalize  (tag1)
　　　slots_tags_luna_convert_normalize (tag2)
　　　這邊做slot_merged
      maxweight     : reduces tags based on tag weights first and then by order in which the features sets are input
           順序也重要　　所以originla 會比luna 重要
　FeatureIdMapper
　　　https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUFeatureIdMapper.h&version=GBmaster

　　　FeatureIdMapper maps input tag feature id to the other id read from the mapping file
　　　用到ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv1_luna_convert_slots.mapping.txt
　　 (39 to 49）如果有被pick 到
　　　這邊會被mapped to 0 to 38 個原本的slots
        ? 用意不知道是什麼
　　　
===============================================
==================================
qd_mediacontrol_mv8_2_slots_PDP_device_name_featurizer
==================================
===============================================

　　　PDP 看起來是personal data processing

          PDP 這個還沒問到  yue 是怎麼work 的  之後看

? 不知道是不是movie tv 相關
來自原這個file
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_luna_convert_slots.device.pipeline
external input1
  來自於preprocess 的output
  ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_preprocess_output
external input2
 generic:ipe_lu_Microsoft_Threshold_Shell_3_generic_enus_MV1_preprocessed_intertoken
 ? 不知道這個功用是幹嘛的
  感覺是string 變成token 中的seperate
  https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUDynamicLexiconFeaturizer.h&version=GBmaster
    call my mom
    會有4個 intertoken,  兩個gap 加上頭尾

 


   參考這個link
external input3
  來自於 qd_mediacontrol_mv8_2_slots_lccrf_featurizer tagger 的結果
  ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_lccrf_tags
external input4
　UserDevices
　是從input  query 的額外information 來的  像是
    注意彼此間要是tag 間隔
    play tiger device    UserDevices    0    1    sonos:tiger    1    -1    -1
  

   ConstFeatureGenerator

 　　generated constant string feature
         ? input 找不到 好像是default 就這樣
         BodySurfaceStream

         好像是生成sonos 這個default token

   TextEditor
      external input4   生成filterDeivcename
      用
 luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.media_title.blacklist.config
      ?只有sonos 的key word 不知道功用是時麼
      這邊感覺好像不是black list , 是white list 的感覺

    ConditionalFeatureSetFilter
         ConstFeatureGenerator
This processor takes two input string feature sets (X and Y), and filter criteria 
         two inputs
           sonosName 來自於 ConstFeatureGenerator
           FilteredDeviceNames 來自於 TextEditor

　　輸出
           SonosDeviceNames  by filterCriteria

     DynamicLexiconFeaturizer1

           input
                   
TokenizedFeatureSet
                    external input 1 =
InterTokenFeatureSet
                     external input 2
StringFeatureSet
                    external 4
           ouput
      　　　生成MatchedSonosTagFeature_1,MatchedSonosStringFeature_1
     TextEditor
           input
               external input 2
            用個replace token luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.intertoken.texteditor.config
             ouput
                 FilteredInterTokens
      DynamicLexiconFeaturizer2
  
           input
                    external input 1
                    FilteredInterTokens
                    external 4
  
           ouput
      　　　生成MatchedSonosTagFeature_2,MatchedSonosStringFeature_2
        FeatureUnion
                 feature set 合併 
                  ? 不知道multiply 是什麼意思
                  input
                 MatchedSonosTagFeature_1
                 MatchedSonosTagFeature_2
                  output
                 MatchedSonosTagFeature
　　FeatureIdMapper
                  用file
                   luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.device.idmap.txt
                   0 map to 19
                     ? 來源不知道是時麼　　但是0 不是是BOS 嗎
                      跟據xml
                      19 是personal_device_name 
                         似乎蠻合理的
　　　　　in
                 MatchedSonosTagFeature
                 out   MatchedSonosTagFeature Mat MatchedSonosTagFeature chedSonosTagFeature
                 MatchedSonosSlot

　　TagReducer
　　　　input
　　　　　external input 1  from preprocessor (input stream)
                  MatchedSonosSlot (tag1 source)
                  external input 3 from slot crf (tag2 source)
      maxweight     : reduces tags based on tag weights first and then by order in which the features sets are input

           ?這邊是用max weight  sonos 的weight 是 1 不知道哪邊initial, 
            一般的tag 似乎是0.4
                    from luna_181112_mediacontrol_enus_MV1.slots.model.pipeline.txt
                    先featureNormalizer weight 1 * 0. 5 = 0.5
                     在featurNormalizer  weight 0.5 * 0,8  = 0.4
           順序也重要　 MatchedSonosSlots　所以 MatchedSonosSMatchedSonosSlot 會比slot crf 重要
         
               ouput
                  QuerySlotWithSonos
                     hedSonosSlot
       FeatureNormalizer
                rescale with 0.99 to make sure the personal device name can be overwrittern by
pattern or whitelist
                好像是* 1個0.99
                input
                  QuerySlotWithSonos
　　　　　這邊是linear
                  權重直接給0.99
      FeatureReplicate
               ? span 的處理　　　不是太懂
               不知道為什麼要這個
/// The processor essentially transforms the input feature set by
/// modifying/replicating the 'From'/'To' fields of the Tag features. The Id and
/// weight fields are not affected.
               in
                   from  FeatureNormalizer
            Featu
===============================================
qd_mediacontrol_mv8_2_slots_PDP_media_title_featurizer
===============================================
==================================
來自於這個file
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_luna_convert_slots
  ExternalInput1: 來自於preprocess 的output
  ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_preprocess_output

ExternalInput2:
 generic:ipe_lu_Microsoft_Threshold_Shell_3_generic_enus_MV1_preprocessed_intertoken
 ? 不知道這個功用是幹嘛的
   ExternalInput3:mediacontrol:ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_lccrf_tags
#   ExternalInput4:ExternalFeatureSet:UserMediaTitles
# @return ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_tags_after_PDP



=====================================================================
qd_mediacontrol_mv8_2_slots_metadata_rewrite_featurizer
=============================================== ==================================

https://msasg.visualstudio.com/Bing_and_IPG/_git/CarinaEnUsModelingData?path=%2Fscenario%2FMicrosoft.Threshold.Shell%2Fen-us%2Fsource%2Fslots.override&version=GBmaster
可以找pattern
最reverse engoneerong

轉fst to txt
D:\Tools\mlgtools\MLGTools.exe proc2feat -in=skills_groupon_enus_version.intents.1gram.bin -out=intent.1gram.example.txt


mediacontrol_ml:ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_preprocess_output:ExternalInput1,
ExternalFeatureSet:UserMediaTitles:ExternalInput2,
mediacontrol_ml:ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_tags_hotfix:ExternalInput3,
generic:ipe_lu_Microsoft_Threshold_Shell_3_generic_enus_MV1_preprocessed_intertoken:ExternalInput4



/*****
section1 : 完成personal lexciono filter 對token / non ken 的取代　, 輸出15 as media title tag 
生成
                personal_slot_tags_override (tag: 4, string: 0)
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
****/
//對正常token 用personal lexcion filter 做match
TextEditor1 
      --in=ExternalInput2 
      external input2   生成filterPersonalMusicItems
      用
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_p13n
      ? 感覺是balck list 這些list 會被換掉  在user define 會被換掉 <!non match  >
    --out=FilteredPersonalMusicItems

DynamicLexiconFeaturizer1 
        --in=ExternalInput1,ExternalInput4,FilteredPersonalMusicItems --out=p13n_matched_1,tmp1
           input
                   
TokenizedFeatureSet
                    external input 1 =
InterTokenFeatureSet
                     external input 4
StringFeatureSet
                    FilteredPersonalMusicItems
         --out=p13n_matched_1,tmp1
              p13n_matched_1
                 根據FilteredPersonalMusicItems 找match
                 此時 personal lexcion tag 會變成0, 權重維持1
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                ExternalInput4 (tag: 0, string: 13)
                        [0,0]=1
                         [1,1]=1
                         [2,2]=1
                         [3,3]=1
                         [4,4]=1
                         [5,5]=1
                         [6,6]=1
                         [7,7]=1
                         [8,8]=1
                         [9,9]=1
                         [10,10]=1
                         [11,11]=1
                        [12,12]=1
                FilteredPersonalMusicItems (tag: 0, string: 1)
                        song of the sea[0,0]=1
        Output:
                p13n_matched_1 (tag: 1, string: 0)
                        0[1,4]=1
                tmp1 (tag: 0, string: 1)
                        [1,4]=1
                        
//對intertoken 用personal lexcion filter 做match
TextEditor2 
    --in=ExternalInput4 --out=FilteredInterTokens 
    --config=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.intertoken.texteditor.config
       external input 4 DynamicLexiconFeaturizer2
        ? 對interken token 做filter  不知道功用是什麼
       --out=FilteredInterTokens 
DynamicLexiconFeaturizer2 
       --in=ExternalInput1,FilteredInterTokens,FilteredPersonalMusicItems 
         input 
         external  input 1
         ? 對interken token 做filter  不知道功用是什麼
      --out=p13n_matched_2,tmp2


FeatureUnion1
         --in=p13n_matched_1,p13n_matched_2 --out=p13n_matched_union --algo=multiply  --ini=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.featureunion.dynamic.ini
         合併 DynamicLexiconFeaturizer1(對正常token 用personal lexcion filter 做match),   DynamicLexiconFeaturizer2 的output(//對intertoken 用personal lexcion filter 做match)
         by ini file 
         這個file 不是太董
         
         tag 0 shift 到15 權重視1
         tag 1 shift 到15 權重視1
          ? 這個時候好像不會有tag 1
          ? 不知道15 的含意是什麼 
--out=p13n_matched_union --algo=multiply  --ini=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.featureunion.dynamic.ini
            p13n_matched_union
        Inputs:
                p13n_matched_1 (tag: 1, string: 0)
                        0[1,4]=1
                p13n_matched_2 (tag: 1, string: 0)
                        0[1,4]=1
        Output:
                p13n_matched_union (tag: 1, string: 0)
                        15[1,4]=1



FeatureNormalizer1
        --in=p13n_matched_union
         FeatureUnion1 的結果
         是合併 
         DynamicLexiconFeaturizer1(對正常token 用personal lexcion filter 做match),   DynamicLexiconFeaturizer2 的output(//對intertoken 用personal lexcion filter 做match)
         並且做
         tag 0 shift 到15 權重視1
         tag 1 shift 到15 權重視1
        --out=personal_slot_tags_spans -
      　對 FeatureUnion1 的結果 進行scale by 2

FeatureReplicate1
      --in=personal_slot_tags_spans 
      --out=personal_slot_tags_override
      
      分成4個
      --out=personal_slot_tags_override
      最後輸出被black list 給取代的結果personal_slot_tags_override
        Inputs:
                personal_slot_tags_spans (tag: 1, string: 0)
                        15[1,4]=2
        Output:
                personal_slot_tags_override (tag: 4, string: 0)
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
//                         

/*****
section2 : 
根據section1 的output : 
                personal_slot_tags_override (tag: 4, string: 0)
                完成personal lexciono filter 對token / non ken 的取代　, 輸出15 as media title tag 
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        
 生成
         ? personal_slot_result 跟personal_slot_result_final 目前覺得依樣　沒有差別　　之後研究
         personal_slot_result (權重2 for media title)
           保留權重   
           tag 　mediacontrol 0又變成15 但是權重保留
           其他的tag 還是0  但是權重 '2'
                personal_slot_result (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1         
         
         personal_slot_result_final(權重2 for media title)
           保留權重   
           tag 　mediacontrol 0又變成15 但是權重保留
           其他的tag 還是0  但是權重 '2'
                //correct
                personal_slot_result_final(tag: 12, string: 0)
                
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        personal_slot_result_final1　（權重1, for all）
            保留權重   
           tag 　mediacontrol 0又變成15 但是權重保留
           其他的tag 還是0  但是權重 '1'          
                personal_slot_result_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=1
                        15[2,2]=1
                        15[3,3]=1
                        15[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1           
****/
# personal slot tagger, media_title score = 2, O = 1
TagReducer1
--in=ExternalInput1,personal_slot_tags_override
          external niput
          personal_slot_tags_override
      output
      --out=personal_slot
           保留權重   
           tag 15　mediacontrol  變成0 但是權重保留
           其他的tag 也變成0  但是權重保留
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                personal_slot_tags_override (tag: 4, string: 0)
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
        Output:
                personal_slot (tag: 12, string: 0)
                        0[0,0]=1
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
TagReducer2
  
     -in=ExternalInput1,personal_slot_tags_override,personal_slot          
          external niput
          personal_slot_tags_override
          　　　apply personal lexicon 沒有做tag mapping 的結果
          personal_slot
          　　　apply personal lexicon 做完　ag mapping 的結果
     output
         personal_slot_result
           保留權重   
           tag 　mediacontrol 0又變成15 但是權重保留
           其他的tag 還是0  但是權重保留
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                personal_slot_tags_override (tag: 4, string: 0)
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                personal_slot (tag: 12, string: 0)
                        0[0,0]=1
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output:
                personal_slot_result (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1

TokenIdToString1 
   --in=personal_slot_result 
      apply personal lexicon 做完　
      mediacntrol  15 權重2
      other tags 都是0  權重1
   --out=personal_slot_result_string 
   --vocabFile=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.media_title.itoc.config.txt
    input
       personal_slot_result
    用這個file

luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.media_title.itoc.config.txt
     -out=personal_slot_result_string 
         把　tag 變成string 
    ? 不知道是幹嘛的  只剩下media title(1, 15) 還有prefix  suffix (30,31)  兩個new tags
     0 -> O
     其他的變成other
     權重變成1
        Inputs:
                personal_slot_result (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output:
                personal_slot_result_string (tag: 0, string: 12)
                        O[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
SingleTokenView11
   input 
    perosnal_slot_result_string  
      apply personal lexicon 做完　
      mediacntrol  15 權重2
      other tags 都是0  權重1
      tag mapping to string 
      只剩下media title(1, 15) 還有prefix  suffix (30,31)  兩個new tags
     0 -> O
     其他的變成other
     權重1
   SingleTokenView used to ignore some queries that constist of only whitespace/
    punctuation for example, {*.*}, {!}, {:)}. With this legacy bug, MLG pipeline
   output
     personal_media_title_tgs_singleString
     
     生成一個single string  只取tag 
     O media_title media_title media_title media_title O O O O O[0,0]=1
        Inputs:
                personal_slot_result_string (tag: 0, string: 12)
                        O[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
        Output:
                personal_media_title_tags_singleString (tag: 0, string: 1)
                        O media_title media_title media_title media_title O O O O O O O[0,0]=1


NLPFSTApplier1
    input
       personal_media_title_tags_singleString
        apply personal lexicon 做完　
        mediacntrol  15 權重2
        other tags 都是0  權重1
        tag mapping to string 
        只剩下media title(1, 15) 還有prefix  suffix (30,31)  兩個new tags
         0 -> O
         其他的變成other
         轉成一個單一的string 
         權重1
      用這個pattern
      // 這個pattern 跟wihte list 沒有關西
      luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.meta.personal.mediacontrol
      
       // 因該是把media title 的span 合併  頭尾都加media+title
       // O 也是合併頭尾都加media+title
      fst[1]: pmatch media_title media_title O O O
      pmatch media_title media_title O O O
      <media_title>media_title media_title</media_title> <O>O O O</O>   
    output
       personal_MatchedName,personal_MatchedType,personal_MatchedStartChar,personal_MatchedLength
         Inputs:
                personal_media_title_tags_singleString (tag: 0, string: 1)
                        O media_title media_title media_title media_title O O O O O O O[0,0]=1
        Output:
                personal_MatchedName (tag: 0, string: 3)
                        O[0,0]=1
                        media_title media_title media_title media_title[1,4]=1
                        O O O O O O O[5,11]=1
                personal_MatchedType (tag: 0, string: 3)
                        <O>[0,0]=1
                        <media_title>[1,4]=1
                        <O>[5,11]=1
                personal_MatchedStartChar (tag: 0, string: 3)
                        0[0,0]=1
                        2[1,4]=1
                        50[5,11]=1
                personal_MatchedLength (tag: 0, string: 3)
                        1[0,0]=1
                        47[1,4]=1
                        13[5,11]=1
 // line 31 32
 FstTags2CrfTags2
    
     --in=personal_slot_result_string, personal_MatchedType
       對NLPFSTApplier1 personal_MatchedType (因該是把media title 的span 合併  頭尾都加media+title)  根據slot file map 成slot
       又再把它變回去 number
        Inputs:
                personal_slot_result_string (tag: 0, string: 12)
                        O[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                personal_MatchedType (tag: 0, string: 3)
                        <O>[0,0]=1
                        <media_title>[1,4]=1
                        <O>[5,11]=1
        Output:
                personal_slot_result_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=1
                        15[2,2]=1
                        15[3,3]=1
                        15[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
      
     
 TagReducerX1
     -in=ExternalInput1,personal_slot_result_final1,personal_slot_tags_override
        personal_slot_result_final1 
        apply personal lexicon 做完　
        mediacntrol  15 權重2
        other tags 都是0  權重1
        tag mapping to string 
        只剩下media title(1, 15) 還有prefix  suffix (30,31)  兩個new tags
         0 -> O
         其他的變成other
         轉成一個單一的string 
         因該是把media title 的span 合併  頭尾都加media+title  
         根據slot file map 成slot
         又再把它變回去 number, 
         權重視1
         
         
        personal_slot_tags_override  
             完成personal lexciono filter 對token / non ken 的取代　, 輸出15 as media title tag 
             權重2
     --out=personal_slot_result_final
        personal pattern 會override
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                personal_slot_result_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=1
                        15[2,2]=1
                        15[3,3]=1
                        15[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
                personal_slot_tags_override (tag: 4, string: 0)
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
        Output:
                personal_slot_result_final (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
 
 /****
 section 3
  # 2018-1-19 huaslin  line 26　生成　把by , 's by tager 成prefix and suffix (personal_pattern_pretreatment_final1) (權重都是1) 
 
 
 裡論上　　因該prefix suffix 要保留
 but slot mapped 根本沒有prefix 跟suffix 感覺沒根本沒什麼用
 
         Output:
                personal_pattern_pretreatment_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
 *****/
 # 2018-1-19 huaslin  line 26
 SingleTokenView2
     -in=ExternalInput1
     --out=preprocess_query_singleString
     只輸出string
      play song of the sea on my living room sonos[0,0]=1
      
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
        Output:
                preprocess_query_singleString (tag: 0, string: 1)
                        play song of the sea by rihanna on my living room sonos[0,0]=1
 NLPFSTApplier2
     --in=preprocess_query_singleString
      用這個pattern
     // 感覺是tag by 跟's 
     luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.mediacontrol.disallowed.pattern.pretreatment.bin
     fst[1]: pmatch play the song by rihanna
     pmatch play the song by rihanna
     play the song <prefix>by</prefix> rihanna
     fst[1]: pmatch play rihanna 's song
     pmatch play rihanna 's song
     play rihanna <suffix>'s</suffix> song
     
     
     沒有match 會生成
     output
                 personal_Pattern_Pretreatment_Matched (tag: 0, string: 0)
                personal_Pattern_Pretreatment_MatchedType (tag: 0, string: 0)
                personal_Pattern_Pretreatment_MatchedStartChar (tag: 0, string: 0)
                personal_Pattern_Pretreatment_MatchedLength (tag: 0, string: 0)    
         Inputs:
                preprocess_query_singleString (tag: 0, string: 1)
                        play song of the sea by rihanna on my living room sonos[0,0]=1
        Output:
                personal_Pattern_Pretreatment_Matched (tag: 0, string: 1)
                        by[5,5]=1
                personal_Pattern_Pretreatment_MatchedType (tag: 0, string: 1)
                        <prefix>[5,5]=1
                personal_Pattern_Pretreatment_MatchedStartChar (tag: 0, string: 1)
                        21[5,5]=1
                personal_Pattern_Pretreatment_MatchedLength (tag: 0, string: 1)
                        2[5,5]=1                

 FstTags2CrfTags1
     --in=ExternalInput1,personal_Pattern_Pretreatment_MatchedType 
     
         personal_Pattern_Pretreatment_MatchedType
      用這個pattern 的結果
     // 感覺是tag by 跟's 
     luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.mediacontrol.disallowed.pattern.pretreatment.bin
     fst[1]: pmatch play the song by rihanna
     pmatch play the song by rihanna
     play the song <prefix>by</prefix> rihanna
     fst[1]: pmatch play rihanna 's song
     pmatch play rihanna 's song
     play rihanna <suffix>'s</suffix> song
     
     --out=personal_pattern_pretreatment_final1
     根據slot file map 成slot
     沒有match 到的就會變成  0[0,0] = 權重變成1
     initial 權重都是1
      用luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.config.xml
      
      但是這個file 根本沒有prefix 跟suffix 感覺沒什麼用
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                personal_Pattern_Pretreatment_MatchedType (tag: 0, string: 1)
                        <prefix>[5,5]=1
        Output:
                personal_pattern_pretreatment_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1

 /****
 section 4
 section 2 的 output personal_slot_result_final (權重2 for mediatitle)
 section 3 的outut 把by , 's by tager 成prefix and suffix (personal_pattern_pretreatment_final1)(權重1)
           
 進行動作
 這個部分會把prefix suffix pattern 的media title 加上ignore
 ? 理論上igonre 因該要必移除　　但是在section　3 prefix suffix 根本沒留著 
 同時　section　3 prefix suffix 　的權重 1 比section 2 權重2 小　感覺沒有作用
 OUTPUT
                 personal_pattern_final (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
 
 *****/           
# 2018-1-19 huaslin  line 36
TagReducer2
把by , 's by tager 成prefix and suffix (personal_pattern_pretreatment_final1)  
把 (media_title string 生成media_tile tag 並且把span 合併  (0 生成O 並且和))(personal_slot_result_final)    進行合併by maxWeight
-- in ExternalInput1,

     personal_pattern_pretreatment_final1,
     　權重1
     personal_slot_result_final 
        section 2 的output. 權重2 for personal lexicon title,  其他的是1
--out=personal_pattern_pretreatment_merge
personal_slot_result_final  權重 2
personal_pattern_pretreatment_final1 權重1
         Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                personal_pattern_pretreatment_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
                personal_slot_result_final (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output:
                personal_pattern_pretreatment_merge (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1  
   
   
TokenIdToString 
    用這個file
    number to tag 
    只剩下media title 還有prefix  suffix  兩個new tags　
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.media_title.itoc.config.txt
     --in=personal_pattern_pretreatment_merge --out=personal_pattern_pretreatment_merge_string   
     
     15 => 變成string media_title
     0=> O
         number to tag 
    只剩下media title 還有prefix  suffix  兩個new tags　
   --out=personal_pattern_pretreatment_merge_string   
       Inputs:
                personal_pattern_pretreatment_merge (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output:
                personal_pattern_pretreatment_merge_string (tag: 0, string: 12)
                        O[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1   
   
SingleTokenView3 
     --in=personal_pattern_pretreatment_merge_string 
     --out=personal_pattern_pretreatment_merge_singleString   
     
     生成一個連接的string 
        Inputs:
                personal_pattern_pretreatment_merge_string (tag: 0, string: 10)
                        O[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        media_title[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
        Output:
                personal_pattern_pretreatment_merge_singleString (tag: 0, string: 1)
                        O media_title media_title media_title media_title O O O O O[0,0]=1
     personal_pattern_pretreatment_merge_singleString
     
     
NLPFSTApplier4
    
  --in=personal_pattern_pretreatment_merge_singleString 
  --out=personal_Pattern_Matched,personal_Pattern_MatchedType,personal_Pattern_MatchedStartChar,personal_Pattern_MatchedLength 
  (前面是disallowed.pattern.pretreated)
  這邊用的到 另外一個
  disallowed.pattern.bin 
  fst[1]: pmatch O O O prefix media_title media_title
pmatch O O O prefix media_title media_title
O O O prefix <media_title><Ignore>media_title media_title</Ignore></media_title>
fst[1]: pmatch O O O media_title media_title suffix
pmatch O O O media_title media_title suffix
<O>O O O</O> <media_title><Ignore>media_title media_title</Ignore></media_title> suffix
fst[1]: pmatch O O O media_title
pmatch O O O media_title
<O>O O O</O> <media_title>media_title</media_title>

    ? 但是問題是prefix 跟suffix 5 前面早就已經都不再了  所以這邊Ignore 根本沒有機會家
    在by (prefix) 後面 的media_title 要加上ignore  可能之後要被ignore 掉
    在's (suffix) 前面 的media_title 要加上ignore  可能之後要被ignore 掉
  
  luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.mediacontrol.disallowed.pattern.bin --mode=matcher
  
         Inputs:
                personal_pattern_pretreatment_merge_singleString (tag: 0, string: 1)
                        O media_title media_title media_title media_title O O O O O O O[0,0]=1
        Output:
                personal_Pattern_Matched (tag: 0, string: 3)
                        O[0,0]=1
                        media_title media_title media_title media_title[1,4]=1
                        O O O O O O O[5,11]=1
                personal_Pattern_MatchedType (tag: 0, string: 3)
                        <O>[0,0]=1
                        <media_title>[1,4]=1
                        <O>[5,11]=1
                personal_Pattern_MatchedStartChar (tag: 0, string: 3)
                        0[0,0]=1
                        2[1,4]=1
                        50[5,11]=1
                personal_Pattern_MatchedLength (tag: 0, string: 3)
                        1[0,0]=1
                        47[1,4]=1
                        13[5,11]=1
  
  
FstTags2CrfTags7
   string 轉成 tag number
   nedia_tile => 15
   這個時候權重都是1
  --in=ExternalInput1,
  personal_Pattern_MatchedType 
  
  
  --out=personal_pattern_final1
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                personal_Pattern_MatchedType (tag: 0, string: 3)
                        <O>[0,0]=1
                        <media_title>[1,4]=1
                        <O>[5,11]=1
        Output:
                personal_pattern_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=1
                        15[2,2]=1
                        15[3,3]=1
                        15[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1  
  
FeatureNormalizer7 
  感覺在調一次weight
  把media control 的權重調成2
  --in=personal_pattern_final1 
  --out=personal_pattern_final --norm=discretize 
  --ddf=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.pattern.media_title.map.txt   
                personal_pattern_final1 (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=1
                        15[2,2]=1
                        15[3,3]=1
                        15[4,4]=1
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output:
                personal_pattern_final (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1


 /****
 section 5
 section 4 的 output  personal_pattern_final(權重2 for media title)  當作ＩNPUT
 slot hotfix 的input 
 調整slot hotfix的權重
 然後 slot hotfix　（有權重1.5 or 3, 還不知道規律. 有所有的tag）  跟personal_pattern_final (tag0: 有權重1, tag15: 有權重2) 做合併 by max weight
 media title　　from tag 15 to 1, 權重1
 其他的tag 變成　2 , 權重1
 
                slot_tags_media_title2 (tag: 12, string: 0)
                        2[0,0]=1
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1
                        
 *****/    
 line 15  (leave it later)
 // 用
因為ouput 相連的關西
FeatureNormalizer2
     input
         external 3
 mediacontrol:ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_tags_hotfix:
        model 給定的結我
        用這個調權重
        luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_luna_convert.slots.redirect.map.txt
        ? 感覺是給不同的權重 不是太董為啥要這樣條
        主要是input 權重原本就不同　　但是equation 都是依樣for all tags
        有的權重變成0,7 => 1.5
        有的權重變0.99 => 3
    output
        slot_tags_redirect
        Inputs:
                ExternalInput3 (tag: 12, string: 0)
                        0[0,0]=0
                        16[1,1]=0.7
                        15[2,2]=0.5
                        15[3,3]=0.5
                        15[4,4]=0.5
                        0[5,5]=0
                        11[6,6]=0.7
                        0[7,7]=0
                        19[8,8]=0.99
                        19[9,9]=0.99
                        19[10,10]=0.99
                        19[11,11]=0.99
        Output:
                slot_tags_redirect (tag: 12, string: 0)
                        0[0,0]=0
                        16[1,1]=1.5
                        15[2,2]=1.5
                        15[3,3]=1.5
                        15[4,4]=1.5
                        0[5,5]=0
                        11[6,6]=1.5
                        0[7,7]=0
                        19[8,8]=3
                        19[9,9]=3
                        19[10,10]=3
                        19[11,11]=3       
        
        
line 46
# media_title for hotfix > personal > statistic
TagReducer8 

     --in=ExternalInput1,slot_tags_redirect,personal_pattern_final 
     slot_tags_redirect  (slot crt 有的權重是1.5  有的權重是3 )
     personal_pattern_final (這個是personal disallowed pattern not treatment的結果   權重視2 if tag , not tag = 1
     )
        section 4 的 output 的output
     
     不一定誰會贏  要看權重　
     ? 這邊的權重為啥這樣不太懂
     
     --out=ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_personal_overwrite
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                slot_tags_redirect (tag: 12, string: 0)
                        0[0,0]=0
                        16[1,1]=1.5
                        15[2,2]=1.5
                        15[3,3]=1.5
                        15[4,4]=1.5
                        0[5,5]=0
                        11[6,6]=1.5
                        0[7,7]=0
                        19[8,8]=3
                        19[9,9]=3
                        19[10,10]=3
                        19[11,11]=3
                personal_pattern_final (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output1:
              <最後的輸出output >
                ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_personal_overwrite (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        11[6,6]=1.5
                        0[7,7]=1
                        19[8,8]=3
                        19[9,9]=3
                        19[10,10]=3
                        19[11,11]=3

### rewrite p13n_matched (when hotfix is applied, there may also personal is substring of hotfix result, so we rewrite the personal meta for this situation)

# line 53
# redirect model media_title id 1
personal pattern 加上hotfix 只剩下media_title 15 to 1  權重變成1
FeatureNormalizer 7
--in=ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_personal_overwrite 
     ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_personal_overwrite  
     personal 加上hotfix 權重合併的結果
--out=slot_tags_media_title 
-ddf=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.media_title.map.txt
  ? file 內容看不太懂  
  15 變成1  其他不見
  
       Inputs:
                ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_slots_personal_overwrite (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        11[6,6]=1.5
                        0[7,7]=1
                        19[8,8]=3
                        19[9,9]=3
                        19[10,10]=3
                        19[11,11]=3
        Output:
                slot_tags_media_title (tag: 4, string: 0)
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1

# other tagger id 2
TagReducer9
personal pattern 加上hotfix 除了 media_title 都變成 to 2  權重變成1
 ? 去掉unkonwtag 2
  --in=ExternalInput1,slot_tags_media_title --out=slot_tags_media_title_internal  --unknownTag=2

        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                slot_tags_media_title (tag: 4, string: 0)
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
        Output:
                slot_tags_media_title_internal (tag: 12, string: 0)
                        2[0,0]=1
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1


TagReducer10 
  personal pattern 加上hotfix 只剩下media_title 15 to 1  權重變成1
  personal pattern  加上hotfix 除了 media_title 都變成 to 2  權重變成1
  兩個合併成同一個 weight 大的決定
 ? 怎麼決定weight 這邊不是太董
  --in=ExternalInput1,slot_tags_media_title,slot_tags_media_title_internal 
  --out=slot_tags_media_title2 --algo=maxweight  
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                slot_tags_media_title (tag: 4, string: 0)
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                slot_tags_media_title_internal (tag: 12, string: 0)
                        2[0,0]=1
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1
        Output:
                slot_tags_media_title2 (tag: 12, string: 0)
                        2[0,0]=1
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1

 /****
 section 6
 section 2的 output  personal_slot_result 當作UNPUT ( personal lexcion 的結果)
 
 只剩下media_title 15 to 0  權重變成 2 
 
                personal_slot_tags_media_title (tag: 4, string: 0)
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2  
 *****/  

# line 59
# redirect personal media_title id 0
只剩下media_title 15 to 0  權重變成 2 
line 50 51
FeatureNormalize6 
--in=personal_slot_result 
    personal_slot_result  權重 2 的filtered media device
--out=personal_slot_tags_media_title 
--ddf=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.media_title.map.txt
  ? file 內容看不太懂  
  15(column1) 變成0 (columb 2)  然後重種還是維持2
        Inputs:
                personal_slot_result (tag: 12, string: 0)
                        0[0,0]=1
                        15[1,1]=2
                        15[2,2]=2
                        15[3,3]=2
                        15[4,4]=2
                        0[5,5]=1
                        0[6,6]=1
                        0[7,7]=1
                        0[8,8]=1
                        0[9,9]=1
                        0[10,10]=1
                        0[11,11]=1
        Output:
                personal_slot_tags_media_title (tag: 4, string: 0)
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2  

  

  

 /****
 section 7
 
 section 5 的　output slot_tags_media_title2
     slot hotfix　（有權重1.5 or 3）  跟personal_pattern_final (有權重　0, 1, 2) 做合併 by max weight
     media title　　from tag 15 to 1, 權重1
     其他的tag 變成　2 , 權重1
                   slot_tags_media_title2 (tag: 12, string: 0)
                        2[0,0]=1
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1 
 
 
 先調整slot_tags_media_title2 weight
   media title　　權重1 to 1
  其他的tag 變成　權重1 to 3
                 slot_tags_media_title3 (tag: 12, string: 0)
                        2[0,0]=3
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=3
                        2[6,6]=3
                        2[7,7]=3
                        2[8,8]=3
                        2[9,9]=3
                        2[10,10]=3
                        2[11,11]=3
                        
 section 6  personal_slot_tags_media_title
     只剩下media_title 15 to 0  權重變成 2 
 
                personal_slot_tags_media_title (tag: 4, string: 0)
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2  
 
 跟section 6 進行　max weight 合併
        hotfix 的權重　　＜ personal slot 的權重低
 　　　                slot_tags_media_title4 (tag: 12, string: 0)
                        2[0,0]=3
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        2[5,5]=3
                        2[6,6]=3
                        2[7,7]=3
                        2[8,8]=3
                        2[9,9]=3
                        2[10,10]=3
                        2[11,11]=3
                        
                        
 只留下media title （這個時候是tag 0） 然後　weight reset 成1
                 p13n_matched_final1 (tag: 4, string: 0)
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
 合併成一個連續的 media title
                 p13n_matched_final (tag: 1, string: 0)
                        0[1,4]=1 
 ****/
  
# 2018-01-22 huaslin tagger the weight =3, which id =2
FeatureNormalizer11 
    --in=slot_tags_media_title2 
    TagReducer10 的output 
    --out=slot_tags_media_title3 -
    -norm=discretize 
    --ddf=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.metadata.map.txt
    這時候只有tag 0 1 2  ()
    結果會變成:
     0: persnaol lexicon filter 的list , 權重 1
     1 :  personal pattern  加上hotfix 的media ttile, 權重1
     2 : personal pattern  加hotfix  other than medai title, 權重3
        Inputs:
                slot_tags_media_title2 (tag: 12, string: 0)
                        2[0,0]=1
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1
        Output:
                slot_tags_media_title3 (tag: 12, string: 0)
                        2[0,0]=3
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=3
                        2[6,6]=3
                        2[7,7]=3
                        2[8,8]=3
                        2[9,9]=3
                        2[10,10]=3
                        2[11,11]=3
                        
TagReducer12 
    --in=ExternalInput1,slot_tags_media_title3, personal_slot_tags_media_title 
       FeatureNormalizer11  的output 
       
       personal_slot_tags_media_title 是FeatureNormalize6  的output 
       weight 高的會取代
        0 / 1  competes ,
        考慮order 的話　　lexcion 　會一贏過 personal pattern  加上hotfix 的media ttile
        2 留著
        
    --out=slot_tags_media_title4 --algo=maxweight
        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                slot_tags_media_title3 (tag: 12, string: 0)
                        2[0,0]=3
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=3
                        2[6,6]=3
                        2[7,7]=3
                        2[8,8]=3
                        2[9,9]=3
                        2[10,10]=3
                        2[11,11]=3
                personal_slot_tags_media_title (tag: 4, string: 0)
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
        Output:
                slot_tags_media_title4 (tag: 12, string: 0)
                        2[0,0]=3
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        2[5,5]=3
                        2[6,6]=3
                        2[7,7]=3
                        2[8,8]=3
                        2[9,9]=3
                        2[10,10]=3
                        2[11,11]=3
FeatureNormalizer12 
     --in=slot_tags_media_title4 
          TagReducer12 的output 
     --out=p13n_matched_final1 
　　　　　　只把0 (media title) 拿出來並且weight reset 成1
           0 的來自於personal lexicon list 
      
           matched.map.txt 只有留0得　權重設成1
                slot_tags_media_title4 (tag: 12, string: 0)
                        2[0,0]=3
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        2[5,5]=3
                        2[6,6]=3
                        2[7,7]=3
                        2[8,8]=3
                        2[9,9]=3
                        2[10,10]=3
                        2[11,11]=3
        Output:
                p13n_matched_final1 (tag: 4, string: 0)
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
     --ddf=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.personal.metadata.p13n_matched.map.txt

FeatureSegmentMerger13 
    --in=p13n_matched_final1 
        只剩下 
          0: persnaol lexicon filter 的list , 權重 1
    --out=p13n_matched_final
      合併成同一個
        Inputs:
                p13n_matched_final1 (tag: 4, string: 0)
                        0[1,1]=1
                        0[2,2]=1
                        0[3,3]=1
                        0[4,4]=1
        Output:
                p13n_matched_final (tag: 1, string: 0)
                        0[1,4]=1      
  
 /****
 section 8
 
 section 5 的　output slot_tags_media_title2

  mediacontrol 權重1 其他是2
                   slot_tags_media_title2 (tag: 12, string: 0)
                        2[0,0]=1
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1 
                        
 section 6  的ˊoutput personal_slot_tags_media_title 
           只剩下media_title 15 to 0  權重變成 2 
 
                personal_slot_tags_media_title (tag: 4, string: 0)
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2  
                        
if the personal result is substring of model(hotfix) result. the result will split into 3 part [A:model] [B:personal] [C:model]  
hotfix 權重　＜personal result 的權重 
        Output:
                media_title_splited (tag: 12, string: 0)
                        2[0,0]=1
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1

然後　
       tag
       0-> O　（此時的0　是 perseonal media title 是從section 6 personal lexcion + personal pattern 來的)
       1 ->  media_title（? 此時的1　從 section 5 來的 hot fix / personal lexcion + pattern 的compete 但是mediatitle 好像是 personal lexcion + pattern win)
       2 ->: others     
     
       Output:
                model_media_title_tags (tag: 0, string: 12)
                        other[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1


***/
# combine personal result with model result, 
# if the personal result is substring of model result. the result will split into 3 part [A:model] [B:personal] [C:model]  
# personal result 的權重比較高的意思
TagReducer14
    --in=ExternalInput1,
    slot_tags_media_title2,
     TagReducer10(的output)
          personal pattern 加上hotfix 只剩下media_title 15 to 1  權重變成1
          personal pattern  加上hotfix 除了 media_title 都變成 to 2  權重變成1
       
    personal_slot_tags_media_title 
    來自FeatureNormalize6 
    personal_slot_result  權重 2 的filtered media device
    
    personal_slot_tags_media_title  會對 slot_tags_media_title2 進行切割
    
    --out=media_title_splited --algo=maxweight
       Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                slot_tags_media_title2 (tag: 12, string: 0)
                        2[0,0]=1
                        1[1,1]=1
                        1[2,2]=1
                        1[3,3]=1
                        1[4,4]=1
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1
                personal_slot_tags_media_title (tag: 4, string: 0)
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
        Output:
                media_title_splited (tag: 12, string: 0)
                        2[0,0]=1
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1
                        
# change to to text representation "other media_title O mediaTitle"
TokenIdToString15 
　　--in=media_title_splited 
  　　　TagReducer14 的output 
     　只有 0,1 ,2
     0: persnaol lexicon filter 的list , 權重 1
     1 :  personal pattern  加上hotfix 的media ttile, 權重1
     2 : personal pattern  加上hotfix  other than medai title, 權重3
       0: O
       1: media title
       2: others

　　　--out=model_media_title_tags --vocabFile=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.media_title.itoc.config.txt
       這邊只轉tag 權重不考慮
   　　只留下 personal pattern  加上hotfix 的media ttile 根據mapping
     
        Inputs:
                media_title_splited (tag: 12, string: 0)
                        2[0,0]=1
                        0[1,1]=2
                        0[2,2]=2
                        0[3,3]=2
                        0[4,4]=2
                        2[5,5]=1
                        2[6,6]=1
                        2[7,7]=1
                        2[8,8]=1
                        2[9,9]=1
                        2[10,10]=1
                        2[11,11]=1
        Output:
                model_media_title_tags (tag: 0, string: 12)
                        other[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1


/******
section 9
section 8 的output 
                model_media_title_tags (tag: 0, string: 12)
                        other[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        
apply meta data fst pattern
         ? 不知道這個　meta data fst pattern 是幹嘛的　　也找不到FST
        Output:
                meta_rewrite_matched (tag: 0, string: 0)
******/
line 74
# apply fst on the meta information of it 
# ? bin 找不到原始的pattern　　不知道meta data 是幹嘛的
SingleTokenView16
    --in=model_media_title_tags 
    TokenIdToString15 的output
    personal pattern  加上hotfix 的media ttile 的med
    
    
    --out=model_media_title_tags_singleString
         Inputs:
                model_media_title_tags (tag: 0, string: 12)
                        other[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        O[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
                        other[0,0]=1
        Output:
                model_media_title_tags_singleString (tag: 0, string: 1)
                        other O O O O other other other other other other other[0,0]=1   
    
?但是不知道功用是什麼        
NLPFSTApplier17 
    --in=model_media_title_tags_singleString 
    SingleTokenView16 的output 
    personal pattern  加上hotfix 的media ttile 的med 但是表示成string like 
    other O O O O other other other other other other other[0,0]=1   
    
    
    --out=MatchedName,MatchedType,MatchedStartChar,MatchedLength 
    --fst=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.rewrite.personal.meta.bin 
    
    ?但是不知道功用是什麼　找不到fst
    ? 可能是這個FSt　
    https://msasg.visualstudio.com/Bing_and_IPG/_git/CarinaEnUsModelingData?path=%2Fscenario%2FMicrosoft.Threshold.Shell%2Fen-us%2Fsource%2Fother%2Fmediacontrol_metadata_personalizedMedia.infile&version=GBmaster
        Inputs:
                model_media_title_tags_singleString (tag: 0, string: 1)
                        other O O O O other other other other other other other[0,0]=1
        Output:
                MatchedName (tag: 0, string: 0)
                MatchedType (tag: 0, string: 0)
                MatchedStartChar (tag: 0, string: 0)
                MatchedLength (tag: 0, string: 0)
                
?但是不知道功用是什麼                
FstTags2CrfTags18 
    --in=model_media_title_tags_singleString,
        MatchedType 
        
        NLPFSTApplier17 的output 
    --out=rewrite_result 
    --mapping=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.personal.meta.config.xml 
        removed , 0 
    --fillNotTaggedTokens=false
        ?但是不知道功用是什麼
        Inputs:
                model_media_title_tags_singleString (tag: 0, string: 1)
                        other O O O O other other other other other other other[0,0]=1
                MatchedType (tag: 0, string: 0)
        Output:
                rewrite_result (tag: 0, string: 0)

?但是不知道功用是什麼
FeatureNormalizer19 

     --in=rewrite_result 
         FstTags2CrfTags18  output 
     --out=meta_rewrite_matched --norm=linear --scale=10
                
        ?但是不知道功用是什麼
        Inputs:
                rewrite_result (tag: 0, string: 0)
        Output:
                meta_rewrite_matched (tag: 0, string: 0)

     

/******
section 10
section 7 output p13n_matched_final (tag: 1, string: 0)

　這邊的0 的media control 的合併點
   0[1,4]=1 
   
section 9 output    
   meta_rewrite_matched 
   apply metadata 
用max weight 合併
? 但是這邊meta　看不出來結果　　因為是bin 不知道pattern


        Output2:
                ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_p13n_matched (tag: 1, string: 0)
                        0[1,4]=1   
                        
                        
       會灌給
       qd_mediacontrol_mv8_2_slots_metadata_featurizer
       　　　裡面有提到 Npn match 的logic 可以之後看
******/


#combine original personal matched with rewrite personal matched
TagReducer20 
   --in=ExternalInput1,
    p13n_matched_final,
       FeatureNormalizer12 的output 
            0 的來自於personal lexicon list   
　　　　　　只把0的weight ＝　給留著　　其他的都移除
           
    meta_rewrite_matched 
     來自於　# apply fst on the meta information of it 　
    
    --out=
    p13n_matched_rewrite_final --algo=maxweight

        Inputs:
                ExternalInput1 (tag: 0, string: 12)
                        play[0,0]=1
                        song[1,1]=1
                        of[2,2]=1
                        the[3,3]=1
                        sea[4,4]=1
                        by[5,5]=1
                        rihanna[6,6]=1
                        on[7,7]=1
                        my[8,8]=1
                        living[9,9]=1
                        room[10,10]=1
                        sonos[11,11]=1
                p13n_matched_final (tag: 1, string: 0)
                        0[1,4]=1
                meta_rewrite_matched (tag: 0, string: 0)
        Output:
                p13n_matched_rewrite_final (tag: 1, string: 0)
                        0[1,4]=1

# filter out rewrite personal matched
FeatureNormalizer21 
   --in=p13n_matched_rewrite_final 
       FeatureNormalizer12 的output 
            0 的來自於personal lexicon list   
　　　　　　只把0的weight ＝　給留著　　其他的都移除
           
        meta_rewrite_matched 
       來自於　# apply fst on the meta information of it 　   
       
       兩個合併的結果
       
   --out=
   ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_p13n_matched 
   --norm=discretize --ddf=luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.slots.meta.filter.map.txt
   0 的來自於 media control    personal lexicon list   
   map 0 的weight 變成1
        Inputs:
                p13n_matched_rewrite_final (tag: 1, string: 0)
                        0[1,4]=1
        Output:
                ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_p13n_matched (tag: 1, string: 0)
                        0[1,4]=1   

==================================
movie tv do not care
===================================
<movietv 先不管>
// 因為好像不需要了
[qd_mediacontrol_mv8_2_domain_pattern_luna_convert_movietv_featurizer]
?  這邊是movie tv 的處理 好像不再需要了


根據
output=ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1_domain_pattern
是再加上luna 自己 converted oattern  domain_pattern 的output

p.s  qd_mediacontrol_mv8_2_domain_pattern_featurizer 這個是原始的model 的pattern 基本上把他跟這邊分開

對應到這個pipeline files
ipe_lu_Microsoft_Threshold_Shell_3_movietv_enus_mv1_luna_convert_domain.pattern.pipeline.txt
這個是yue 完全自己手解的


# Further preprocess to remove uncessary tokens
# Lower case
for preprocess_output1

SingleTokenView
ignore
 {*.*}, {!}, {:)}.
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUDocumentViewSingleToken.h&version=GBmaster

NLPFSTApplier
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUNLPFSTApplier.h&version=GBmaster
這個apply yue 的 .fst
來源是luna 的convert.preprocess.fst


ExtractNthFeature
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUExtractNthFeature.h&version=GBmaster
這邊用-1 不知道extra last one of preprocess 是什麼意思 是不是固定跟 NLPFSTApplier 搭配

CharTokenizer

https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUDocumentViewCharTokenized.h&version=GBmaster
// Input1 (string feature) = "call mary\tjane"
// Output1 (string features) = "call" "mary" "jane"
// Output2 (string features) = "", " ", "", ""

會輸出兩個feature

TextEditor
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUDocumentViewTextEditor.h&version=GBmaster
轉成lower case
要提供一個single file 當作input

最後輸出
luna_convert_preprocessed_output_lower_case

# Replace Slot Tag To Magic String, for intent matching
for  slots_lccrf_tags
FeatureSimpleFilter
只輸出某一些tag Id   --keeptags= 3
這邊3
會不會是xml  slot tagger 的3呢?
對  就是device_type   (index = 0 開始算)


TokenReplacer
然後 取代   luna_convert_preprocessed_output_lower_case 裡面的device type 變成
MagicDeviceType
用canonical Token 來取代
--canonicalToken=MagicDeviceType


# Add BOS to query
# Combine BOS to query
? 這個先
ConstFeatureGenerator
StringFeatureUnion



# Apply FST

NLPFSTApplier
這邊用的是
ipe_lu_Microsoft_Threshold_Shell_3_movietv_enus_mv1_luna_convert_intents.pattern.fst
luna convert 的intent pattern
對家了bos 的query apply
生成IntentMatchedName,IntentMatchedType,IntentMatchedStartChar,IntentMatchedLength
? 為什麼可以生成4個  有點不太懂

FstTags2CrfTags
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUFstTags2CrfTags.h&version=GBmaster
// Inputs:
// 1.   Original Query
// 2.   FST output tags
//
// Output:
// 1.   CRF like tags

用到這個intent 的  mapping
luna_180508_ipe_lu_Microsoft_Threshold_Shell_3_mediacontrol_enus_mv8_1.intents.pattern.entities.config.xml

FeatureNormalizer
https://msasg.visualstudio.com/QAS/_git/qas?path=%2Fprivate%2Fanswers%2FSDS%2FQCS%2Flib%2Fsrc%2Fmlg3.4%2FDUFeatureNormalizer.h&version=GBmaster

mapping 成CRF tags 之後  換成
進行normalization
-ddf
這邊是movie tv 的處理
ipe_lu_Microsoft_Threshold_Shell_3_movietv_enus_mv1_luna_convert_domain_overwrite.pattern.map.txt
這邊因該有自己override 每一個intent 的權重
感覺是輸出每個的score
......
movie tv 沒讀完  但是先不管

