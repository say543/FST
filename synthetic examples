

========================
LogDataProcessing.py
========================

LogDataProcessing.py --input {in:GenericTSV:input}  --output {out:Directory_Of_GenericTSV:output}   
--intentwhitelist  [{in:GenericText:intentwhitelist}]   --pick ((percentile:default,@@percentile@@)



visuaal stduio  debug  -> properties -> debug -> script arguments



--input seeddata.txt  --output LogDataProcessing_output --intentwhitelist intents.txt --pick 100


cmnd line
 py .\LogDataProcessing.py --input seeddata.txt  --output LogDataProcessing_output --intentwhitelist intents.txt --pick 100
 
 
 check process if locked 
 https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer
 happens on phrase decoder.py
 
 
 
========================
PhraseDecoder.py
========================

 
 
PhraseDecoder.py
--input output  --output output --intentwhitelist intents.txt  --paraphrasetool paraToolDir --paraphrasesource parasource
 
 // input 跟output directory 分開
--input LogDataProcessing_output  --output PhraseDecoder_output --intentwhitelist intents.txt  --paraphrasetool paraToolDir --paraphrasesource parasource
 
cmd line
py .\PhrasalDecoder.py --input LogDataProcessing_output --output PhraseDecoder_output --intentwhitelist intents.txt --paraphrasetool paraToolDir --paraphrasesource parasource


可以提供NBestLength 的output
? 我在想  把這個調大   之後再用word embedding  看sentence embedding  哪個比較接近
or
? 增加paraphrasesource 的語料庫  (這個已經做不到....)

output config 會輸出到input 的directory 
E:\synthetic_example\SyntheticAether\SyntheticAether\LogDataProcessing_output\file_open\input\file_open.para.config

有些config 會從這個config 裡面來
ENZ.ENU.General.decoder.config


========================
LexicalExpansion.py
========================


LexicalExpansion.py



hard code file 
在paraphrase source 裡面的config


# ? 根本就沒有final folder 可以被使用
# 直接config 就copy 到parasource 然後直接就run 了


這個file 是paratool 會產生的
E:\synthetic_example\SyntheticAether\SyntheticAether\LogDataProcessing_output\file_open\output\file_open.para
然後clean_file() 會把content 輸出到  這樣比較乾淨
E:\synthetic_example\SyntheticAether\SyntheticAether\LogDataProcessing_output\file_open\output\file_open.txt
只留下query 其他的東西不見








subprocess.run([decoder, config], stderr=f_stderr)
decorer 是直接run
PhrasalDecoder.exe


LexicalExpansion.py


LexicalExpansion.py

--sources SlotFolder --inputdir  PhraseDecoder_output --count 3 --intentwhitelist intents.txt --output LexicalExpansion_output


py  .\LexicalExpansion.py  --sources SlotFolder --inputdir  PhraseDecoder_output --count 3 --intentwhitelist intents.txt --output LexicalExpansion_output


count 的參數是


在slotFolder (sources_path 裡面)
query 的 domain
names.txt

query 的 intents, 但是跟whitelist 不一樣
intents.txt 

可能的slots
slots.txt

每一個slot 有自己的lexicon list
file_filetype -> file_filetype.txt
file_title -> file_title.txt


一樣會先輸出到
'PhraseDecoder_output\\data.tsv'
在copy 到LexicalExpansion_output/ 的folder 

expand()
onlyfiles
  就是phraseDecoder 產生出來的result
  E:\synthetic_example\SyntheticAether\SyntheticAether\PhraseDecoder_output\file_open\output\file_open.txt
  
  用到sentence_expansion()
  這個會把 tag 跟not tagger的部分生出來
  
  originla query
  'Open the <file_title> file'
  
  生成的
  
		tagged	'Open the <file_title> theo chocolate </file_title> file'	str
		untagged	'Open the  theo chocolate  file'	str

  
  
 



